import requests
import json
import base64
import protofile_v1_pb2
# import protofile_categories_pb2
from google.protobuf.json_format import MessageToJson


url = "https://sport.synottip.cz/WebServices/Api/SportsBettingService.svc/GetWebStandardEvents"
# url = "https://sport.synottip.cz/WebServices/Api/SportsBettingService.svc/GetWebStandardCategories"

payload = json.dumps({
  "LanguageID": 12,
  "Token": "47556bba7e2ecae0a31c38d6e017bcbb",
  "CategoryID": "19",
  "Top": 1
})
# payload = json.dumps({
#     "LanguageID": 12,
#     "Token": "47556bba7e2ecae0a31c38d6e017bcbb",
# })
headers = {
  'Accept': 'application/json, text/plain, */*',
  'Content-Type': 'application/json',
#   'Cookie': 'BIGipServer~SYNOTTIP~m.synottip.cz=!Ihwpj5xNXS47qYY+zA4+oBhRAY9DFTlt/T+B5pUoVc0vbS2CP5mY0KQ0MWGqM2EYTTIVtHOXAJypvipHdk2eUTAcN/9xqzw3Og/8sp6/'
}

response = requests.request("POST", url, headers=headers, data=payload)


response_json = json.loads(response.text)
# print(response_json['ReturnValue'])

# Decoding the base64 string
decoded_bytes = base64.b64decode(response_json['ReturnValue'])

# Convert the bytes to a string (if applicable)
decoded_string = decoded_bytes.decode('utf-8', errors='ignore')

# Output the decoded string
# print(decoded_string)

# example: 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

# Create an instance of the protobuf message (replace YourProtoMessage with the correct message class)
message = protofile_v1_pb2.Root()

# Parse the decoded bytes using protobuf
message.ParseFromString(decoded_bytes)

message_json = MessageToJson(message)
message_json_utf = json.loads(message_json)
message_json_final = json.dumps(message_json_utf, ensure_ascii=False, indent=2)

# Output the decoded protobuf message
print(message_json_utf)